"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2260],{35318:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var i=t(27378);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=i.createContext({}),c=function(e){var r=i.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},l=function(e){var r=c(e.components);return i.createElement(o.Provider,{value:r},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},u=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(t),u=n,f=d["".concat(o,".").concat(u)]||d[u]||m[u]||a;return t?i.createElement(f,s(s({ref:r},l),{},{components:t})):i.createElement(f,s({ref:r},l))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=u;var p={};for(var o in r)hasOwnProperty.call(r,o)&&(p[o]=r[o]);p.originalType=e,p[d]="string"==typeof e?e:n,s[1]=p;for(var c=2;c<a;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1259:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var i=t(25773),n=(t(27378),t(35318));const a={title:"ST7735, ILI9163, ST7789"},s="ST7735, ILI9163, ST7789, ILI9341",p={unversionedId:"api/drivers/st7789",id:"api/drivers/st7789",title:"ST7735, ILI9163, ST7789",description:"Driver for ST7735, ST7789 and similar LCD screens using SPI.",source:"@site/docs/api/drivers/st7789.mdx",sourceDirName:"api/drivers",slug:"/api/drivers/st7789",permalink:"/devicescript/api/drivers/st7789",draft:!1,tags:[],version:"current",frontMatter:{title:"ST7735, ILI9163, ST7789"},sidebar:"tutorialSidebar",previous:{title:"SSD1306",permalink:"/devicescript/api/drivers/ssd1306"},next:{title:"Switch",permalink:"/devicescript/api/drivers/switch"}},o={},c=[{value:"Hardware configuration",id:"hardware-configuration",level:2},{value:"Display",id:"display",level:2},{value:"Driver",id:"driver",level:2}],l={toc:c},d="wrapper";function m(e){let{components:r,...t}=e;return(0,n.kt)(d,(0,i.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"st7735-ili9163-st7789-ili9341"},"ST7735, ILI9163, ST7789, ILI9341"),(0,n.kt)("p",null,"Driver for ST7735, ST7789 and similar LCD screens using SPI.\nThe ST7735 driver also works for ILI9163C."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { ST7789Driver } from "@devicescript/drivers"\nimport { ST7735Driver } from "@devicescript/drivers"\nimport { ILI9341Driver } from "@devicescript/drivers"\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.waveshare.com/w/upload/a/ae/ST7789_Datasheet.pdf"},"Datasheet for ST7789")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.displayfuture.com/Display/datasheet/controller/ST7735.pdf"},"Datasheet for ST7735")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.newhavendisplay.com/app_notes/ILI9163.pdf"},"Datasheet for ILI9163")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cdn-shop.adafruit.com/datasheets/ILI9341.pdf"},"Datasheet for ILI9341"))),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/mmoskal/devicescript-waveshare-pico-lcd/blob/main/assets/pico-lcd-114.png?raw=true",alt:"WaveShare Pico-LCD shield"})),(0,n.kt)("admonition",{title:"I8080 not supported",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The drivers use the SPI interface. The parallel interface (I8080) is not supported at the moment.")),(0,n.kt)("h2",{id:"hardware-configuration"},"Hardware configuration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Configure the SPI connection")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { spi } from "@devicescript/spi"\nimport { pins } from "@dsboard/pico_w"\n\nspi.configure({\n    mosi: pins.GP11,\n    sck: pins.GP10,\n    hz: 8_000_000,\n})\n')),(0,n.kt)("h2",{id:"display"},"Display"),(0,n.kt)("p",null,"The driver implements the ",(0,n.kt)("a",{parentName:"p",href:"/developer/graphics/display"},"Display")," interface and can be used as various services.\nUsing the driver through services provides a better simulation experience."),(0,n.kt)("h2",{id:"driver"},"Driver"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/devicescript/blob/main/packages/drivers/src/st7735.ts"},"Source"))),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/mmoskal/devicescript-waveshare-pico-lcd/blob/main/src/picolcd114.ts"},"devicescript-waveshare-pico-lcd"),"\nuses the driver for a ",(0,n.kt)("a",{parentName:"p",href:"https://www.waveshare.com/pico-lcd-1.14.htm"},"WaveShare Pico-LCD")," shield."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import * as ds from "@devicescript/core"\nimport { spi } from "@devicescript/spi"\nimport { pins } from "@dsboard/pico_w"\nimport { ST7789Driver } from "@devicescript/drivers"\nimport { Image } from "@devicescript/graphics"\n\nspi.configure({\n    mosi: pins.GP11,\n    sck: pins.GP10,\n    hz: 8_000_000,\n})\n\n// backlight led\npins.GP13.setMode(ds.GPIOMode.OutputHigh)\n\nconst display = new ST7789Driver(Image.alloc(240, 136, 4), {\n    dc: pins.GP8,\n    cs: pins.GP9,\n    reset: pins.GP12,\n    // frmctr1: 0x0e_14_ff,\n    flip: false,\n    spi: spi,\n    offX: 40,\n    offY: 53,\n})\nawait display.init()\ndisplay.image.print("Hello world!", 3, 10)\nawait display.show()\n')))}m.isMDXComponent=!0}}]);